Description: >
  This template illustrates how to use AWS CodeBuild and AWS CodePipeline to
  achieve continuous deployment of source code from a GitHub repository via a
  Docker container to an Amazon EC2 Container Service cluster.


Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-8573a6ed
    Description: Specify the VPC which would you like to deploy.

  Subnets:
    Type: String
    Default: subnet-fe7f4e9a,subnet-eb372f9f
    Description: Specify the subnet IDs where would you like to deploy.

  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
    Type: AWS::EC2::KeyPair::KeyName
    Default: rex201710041559
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  GitHubUser:
    Type: String
    Default: lyroid
    Description: Your username on GitHub.

  GitHubRepo:
    Type: String
    Default: ecs-demo-php-simple-app
    Description: The repo name of the sample service.

  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.

  GitHubToken:
    Type: String
    Default: 623d2a78f6f3de516771703cd5ba8b93a4f65508
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)


Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
      VpcId:
        default: vpc-8573a6ed
      Subnets:
        default: subnet-fe7f4e9a,subnet-bfaa9ec9,subnet-eb372f9f
      KeyName:
        default: rex201710041559
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken
      - Label:
          default: VPC Configuration
        Parameters:
          - VpcId
          - Subnets
          - KeyName

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/cd-20171016-ap-southeast-1/templates/ecs-cluster.yaml
      Parameters:
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !Ref Subnets
        VpcId: !Ref VpcId
        KeyName: !Ref KeyName

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/cd-20171016-ap-southeast-1/templates/deployment-pipeline.yaml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        TemplateBucket: !Sub cd-20171016-${AWS::Region}

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/cd-20171016-ap-southeast-1/templates/load-balancer.yaml
      Parameters:
        # Subnets: !GetAtt VPC.Outputs.Subnets
        # VpcId: !GetAtt VPC.Outputs.VpcId
        Subnets: !Ref Subnets
        VpcId: !Ref VpcId

  # VPC:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3.amazonaws.com/cd-20171016/ecs-refarch-continuous-deployment/templates/vpc.yaml
  #     Parameters:
  #       Name: !Ref AWS::StackName
  #       VpcCIDR: !Ref
  #       Subnet1CIDR: 10.215.10.0/24
  #       Subnet2CIDR: 10.215.20.0/24


Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
